What happens when you initialize a repository? Why fo you need to do it?
When you initialize a repository, it sets the staging area and allows for the possibility to track file using git. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area allows us to selectively commit a series of files while ignoring others in a single commit. This gives us greater control over our commits and therefore our workflow.

How can you use the staging area to make sure you have one commit per logical change?
We can selectively add changes to the staging area from different files 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are useful when you want to add a new feature or make a drastic change to a master file that is already functioning properly. You would not want to accidentally screw something up in your master while you are working on the new feature.

How d the diagrams help you visualize the branch structure?
The diagrams help you see which commits are accessible to different branches 

What is the resut of merging two branches together? Why do we represent it in the diagram the way we do?

The result of merging two branches combined the commits from the two branches. We represent it in the diagram the way we do to be clear on what the parent commits are.

What are the pros and cons of Git's automatice merging vs. always doing merges manually?
The pros of this feature include the obvious ease of use, the con is that you may not always see or be aware of all the changes in the merge document if the merge does not cause a conflict on those lines or functions.